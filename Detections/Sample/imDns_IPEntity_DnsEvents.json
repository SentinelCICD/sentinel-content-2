{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    },
    "analytic-id": {
      "type": "string",
      "defaultValue": "8fb31b17-e360-4b59-a281-19c4fe483909",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic-id'))]",
      "apiVersion": "2020-01-01",
      "kind": "Scheduled",
      "location": "[resourceGroup().location]",
      "properties": {
        "description": "Identifies a match in DNS events from any IP IOC from TI\nTo use this analytics rule, make sure you have deployed the [ASIM normalization parsers](https://aka.ms/AzSentinelDns).",
        "displayName": "(Preview) TI map IP entity to Dns Events (Normalized DNS)",
        "enabled": false,
        "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet IP_TI = (ThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n// As there is potentially more than 1 indicator type for matching IP, taking NetworkIP first, then others if that is empty.\n// Taking the first non-empty value based on potential IOC match availability\n| extend TI_ipEntity = coalesce(NetworkIP, NetworkDestinationIP, NetworkSourceIP,EmailSourceIpAddress,\"\")\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId);\nlet TI_IP_List=IP_TI | summarize make_set( TI_ipEntity);\nimDns(starttime=ago(dt_lookBack), response_has_any_prefix=todynamic(toscalar(TI_IP_List)))\n    | extend tilist = toscalar(TI_IP_List)\n    | mv-expand tilist\n    | extend SingleIP=tostring(tilist)\n    | project-away tilist\n    | where has_ipv4(DnsResponseName, SingleIP)\n    | extend DNS_TimeGenerated = TimeGenerated\n| join IP_TI\n      on $left.SingleIP == $right.TI_ipEntity\n| where DNS_TimeGenerated >= TimeGenerated and DNS_TimeGenerated < ExpirationDateTime\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, DNS_TimeGenerated,\nTI_ipEntity, Dvc, EventId, SubType, SrcIpAddr, DnsQuery, DnsResponseName, NetworkIP, NetworkDestinationIP, NetworkSourceIP, EmailSourceIpAddress\n| extend timestamp = DNS_TimeGenerated, IPCustomEntity = TI_ipEntity, HostCustomEntity = Dvc, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "alertRuleTemplateName": "67775878-7f8b-4380-ac54-115e1e828901",
        "tags": [
          {
            "Id": "69b7723c-2889-469f-8b55-a2d355ed9c87",
            "version": "1.0.0"
          },
          {
            "SchemaVersion": "0.1.1",
            "Schema": "ASIMDns"
          }
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "FullName",
                "columnName": "HostCustomEntity"
              }
            ],
            "entityType": "Host"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ],
            "entityType": "URL"
          }
        ],
        "techniques": null,
        "tactics": [
          "Impact"
        ],
        "requiredDataConnectors": [
          {
            "connectorId": "ThreatIntelligence",
            "dataTypes": [
              "ThreatIntelligenceIndicator"
            ]
          },
          {
            "connectorId": "ThreatIntelligenceTaxii",
            "dataTypes": [
              "ThreatIntelligenceIndicator"
            ]
          }
        ],
        "incidentConfiguration": null,
        "eventGroupingSettings": null,
        "customDetails": {
          "SubType": "SubType",
          "DnsQuery": "DnsQuery",
          "IndicatorId": "IndicatorId",
          "EventId": "EventId",
          "SourceIPAddress": "SrcIpAddr",
          "ThreatType": "ThreatType",
          "DNSRequestTime": "DNS_TimeGenerated",
          "LatestIndicatorTime": "LatestIndicatorTime",
          "ExpirationDateTime": "ExpirationDateTime",
          "Description": "Description",
          "ConfidenceScore": "ConfidenceScore",
          "ActivityGroupNames": "ActivityGroupNames"
        },
        "alertDetailsOverride": null
      }
    }
  ]
}
